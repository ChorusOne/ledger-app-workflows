name: Output metadata on the application, inferred from the local 'ledger_app.toml' manifest or not

on:
  workflow_call:
    inputs:
      relative_app_directory:
        description: 'The relative path in the repository where the application is built from (defaults to ".")'
        required: false
        default: .
        type: string
    outputs:
      is_rust:
        description: Returns "true" if the app is using Rust SDK, else returns "false"
        value: ${{ jobs.check_manifest.outputs.is_rust }}
      build_directory:
        description: |
          Returns the relative 'build_directory' path, i.e the repository directory where can be
          found either the root 'Makefile' of a C app, or the Cargo.toml of a Rust app.

          This information is deduced from the 'ledger_app.toml' manifest if present, else is
          equivalent to the 'relative_app_directory'.
        value: ${{ jobs.check_manifest.outputs.build_directory }}

env:
  APP_MANIFEST: "ledger_app.toml"

jobs:
  check_manifest:
    name: Check if app is based on Rust
    runs-on: ubuntu-latest

    steps:
      - name: Clone app repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install ledgered

      - name: Check presence of the $APP_MANIFEST manifest
        id: check_manifest
        run: |
          if [[ -f "$APP_MANIFEST" ]];
          then
              # 'ledger_app.toml' exists
              if [[ -n $(grep 'rust-app' "$APP_MANIFEST") ]];
              then
                  # legacy manifest -> Rust application
                  echo "Legacy manifest detected. Please update your manifest to the newest version";
                  # checking the manifest with the repo
                  ledger-manifest --legacy --check . "$APP_MANIFEST"
                  echo "build_directory=$(ledger-manifest --legacy --output-build-directory $APP_MANIFEST)" >> $GITHUB_OUTPUT;
                  echo "is_rust=true" >> $GITHUB_OUTPUT;
              else
                  # classic manifest -> can be either C or Rust
                  echo "Classic manifest detected.";
                  # checking the manifest with the repo
                  ledger-manifest --check . "$APP_MANIFEST"
                  echo "build_directory=$(ledger-manifest --output-build-directory $APP_MANIFEST)" >> $GITHUB_OUTPUT;
                  if [[ "$(ledger-manifest --output-sdk $APP_MANIFEST)" == "rust" ]];
                  then
                      echo "is_rust=true" >> $GITHUB_OUTPUT;
                  else
                      echo "is_rust=false" >> $GITHUB_OUTPUT;
                  fi
              fi
          else
              # No 'ledger_app.toml' -> C application
              echo "No manifest detected.";
              echo "build_directory=${{ inputs.relative_app_directory }}" >> $GITHUB_OUTPUT;
              echo "is_rust=false" >> $GITHUB_OUTPUT;
          fi

    outputs:
      is_rust: ${{ steps.check_manifest.outputs.is_rust }}
      build_directory: ${{ steps.check_manifest.outputs.build_directory }}
